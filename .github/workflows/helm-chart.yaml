name: Deploy to Kubernetes

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted  # Ensure you are using the self-hosted agent

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3

    - name: Verify Helm is available
      run: helm version  # Make sure Helm is installed and accessible

    - name: Set up Kubernetes config from GitHub Secret
      run: |
        # mkdir -p ~/.kube  # Create the kube directory if it doesn't exist
        echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config  # Set Kubeconfig from GitHub secret

    - name: Verify Kubernetes connection
      run: |
        kubectl cluster-info  # Verify that kubectl can connect to the cluster

    - name: Install Helm Chart
      run: |
        helm repo add stable https://charts.helm.sh/stable  # Add Helm repo (if required)
        helm repo update  # Update the Helm repositories
        helm install myapp ./k8-app  # Path to the chart is './k8-app'

    - name: Wait for Kubernetes Pods to be ready
      run: |
        kubectl rollout status deployment/redis-leader  # Replace 'myapp' with your deployment name
   
    - name: Forward traffic to the frontend service
      run: |
        Start-Process kubectl -ArgumentList "port-forward", "svc/frontend", "8080:80" # Run port-forwarding in the background
        sleep 5  # Allow some time for the port-forward to establish
        curl http://localhost:8080  # Check if service is accessible
        shell: C:\WINDOWS\System32\WindowsPowerShell\v1.0\powershell.EXE -command ". '{0}'"


    - name: Wait for 30 seconds and check if service is accessible
      run: |
        sleep 30  # Wait for 30 seconds
        curl http://localhost:8080 || exit 1  # Check if the service is still accessible, exit if not
        
    - name: Delete Helm Chart after 30 seconds
      run: |
        helm uninstall myapp  # Delete the Helm chart after confirming accessibility    
